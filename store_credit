##This programs solves the following question:
##You receive a credit C at a local store and would like to buy two items.
##You first walk through the store and create a list L of all available items.
##From this list you would like to buy two items that add up
##to the entire value of the credit.
##
##The solution you provide will consist of the two integers
##indicating the positions of the items in your list (smaller number first).
##
##Input
##The first line of input gives the number of cases, N. N test cases follow.
##For each test case there will be:
##    One line containing the value C, the amount of credit you have at the store.
##    One line containing the value I, the number of items in the store.
##    One line containing a space separated list of I integers.
##    Each integer P indicates the price of an item in the store.
##    Each test case will have exactly one solution.
##    
##Output
##For each test case, output one line containing "Case #x: "
##followed by the indices of the two items whose price adds up to the store credit.
##The lower index should be output first.

def ans(totalcred, totit, item):
    """This function takes the inputs total credits, total number of items
    in the shop and list of rate of the items."""
    sum = 0
    k = 1
    out = []
    if totit == len(item):
        for j in range(int(totit)):
            for k in range(int(totit)):
                if j != k:     
                    sum = int(item[j]) + int(item[k])            
                    if sum == totalcred:
                        out.append(j+1)
                        out.append(k+1)
        return (out[0],out[1])
    else:
        return "Number of items and list not equal"

if __name__ == '__main__':
    try:
        with open('A-large-practice.in', 'r') as fp:
            testcases = int(fp.readline())
            for testcase in xrange(testcases):
                credit = int(fp.readline())
                totalitems = int(fp.readline())
                items = fp.readline().split()
                result = ans(credit, totalitems, items)
                print "Case #%d: %d %d" % (testcase+1, result[0], result[1])
    except ValueError:
        print "Exception caught"
        print "Value is not provided"
